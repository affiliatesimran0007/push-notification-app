generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  password  String
  name      String?
  role      String     @default("user")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  campaigns Campaign[]
  templates Template[]
}

model Client {
  id             String                 @id @default(cuid())
  endpoint       String                 @unique
  p256dh         String
  auth           String
  browser        String
  browserVersion String?
  ip             String?
  country        String?
  city           String?
  os             String?
  device         String?
  subscribedUrl  String?
  subscribedAt   DateTime               @default(now())
  lastActive     DateTime               @default(now())
  tags           String[]               @default([])
  accessStatus   String                 @default("allowed")
  landingPageId  String?
  landingPage    LandingPage?           @relation(fields: [landingPageId], references: [id])
  segments       ClientSegment[]
  notifications  NotificationDelivery[]
}

model Campaign {
  id             String                 @id @default(cuid())
  name           String
  title          String
  message        String
  url            String?
  icon           String?
  badge          String?
  image          String?
  type           String                 @default("promotional")
  status         String                 @default("draft")
  targetAudience String                 @default("all")
  sentCount      Int                    @default(0)
  deliveredCount Int                    @default(0)
  clickedCount   Int                    @default(0)
  failedCount    Int                    @default(0)
  scheduledFor   DateTime?
  sentAt         DateTime?
  createdAt      DateTime               @default(now())
  updatedAt      DateTime               @updatedAt
  abTestEnabled  Boolean                @default(false)
  variantA       Json?
  variantB       Json?
  trafficSplit   Int                    @default(50)
  userId         String?
  dismissedCount Int                    @default(0)
  user           User?                  @relation(fields: [userId], references: [id])
  segments       CampaignSegment[]
  notifications  NotificationDelivery[]
}

model Template {
  id                 String   @id @default(cuid())
  name               String
  category           String
  title              String
  message            String
  url                String?
  icon               String?
  badge              String?
  sound              String   @default("default")
  actions            Json?
  variables          String[] @default([])
  requireInteraction Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  userId             String?
  user               User?    @relation(fields: [userId], references: [id])
}

model NotificationDelivery {
  id          String    @id @default(cuid())
  campaignId  String
  clientId    String
  variant     String?
  status      String
  sentAt      DateTime  @default(now())
  deliveredAt DateTime?
  clickedAt   DateTime?
  error       String?
  campaign    Campaign  @relation(fields: [campaignId], references: [id])
  client      Client    @relation(fields: [clientId], references: [id])

  @@unique([campaignId, clientId])
}

model Segment {
  id          String            @id @default(cuid())
  name        String
  description String?
  rules       Json
  clientCount Int               @default(0)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  campaigns   CampaignSegment[]
  clients     ClientSegment[]
}

model ClientSegment {
  clientId  String
  segmentId String
  addedAt   DateTime @default(now())
  client    Client   @relation(fields: [clientId], references: [id])
  segment   Segment  @relation(fields: [segmentId], references: [id])

  @@id([clientId, segmentId])
}

model CampaignSegment {
  campaignId String
  segmentId  String
  campaign   Campaign @relation(fields: [campaignId], references: [id])
  segment    Segment  @relation(fields: [segmentId], references: [id])

  @@id([campaignId, segmentId])
}

model LandingPage {
  id               String   @id @default(cuid())
  name             String
  domain           String   @unique
  landingId        String   @unique
  status           String   @default("active")
  botProtection    Boolean  @default(true)
  enableRedirect   Boolean  @default(false)
  allowRedirectUrl String?
  blockRedirectUrl String?
  subscriberCount  Int      @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  clients          Client[]
}

model AnalyticsEvent {
  id         String   @id @default(cuid())
  event      String
  campaignId String?
  clientId   String?
  metadata   Json?
  ip         String?
  userAgent  String?
  timestamp  DateTime @default(now())

  @@index([event])
  @@index([campaignId])
  @@index([timestamp])
}
